name: "Test, build, and publish"

on:
  push:
    branches:
      # TODO: Change branch name to main, maybe, to align with GitHub
      # defaults. I don't want to, unless the original project does so.
      - master
  workflow_dispatch:

jobs:
  env:
    DOTNET_CLI_TELEMETRY_OPTOUT: true

  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK 5.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Install dependencies
        run: dotnet restore
        # TODO: Integrate this into another Python script, or use the
        # regular publish script and just add an option to only strip
        # files and do nothing else
      - name: Remove Windows preprocessor directives
        run: sh remove_windows_directives.sh
      - name: Build project
        run: dotnet build
      - name: Run NUnit tests via dotnet CLI
        run: dotnet test
        # TODO: Test actual program's output
      - name: Check if program can run
        run: |
          rm -rf .tmp-build-test && mkdir .tmp-build-test && \
          dotnet build --output .tmp-build-test \
          ./YTSubConverter.CLI/YTSubConverter.CLI.csproj && \
          ./.tmp-build-test/YTSubConverter.CLI

  # TODO: Package LICENSE and THIRD-PARTY-NOTICES.txt along with
  # the releases / artifacts
  publish:
    needs: build_and_test
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    strategy:
      matrix:
        build_type:
          - non-portable
          - non-portable-single-file
          - portable
          - portable-single-file
        runtime:
          - win-x64
          - win-x86
          - osx-x64
          - linux-x64
          - linux-musl-x64
          # TODO: Add ARM versions (and test if they work)

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK 5.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Setup Python 3 for publish script
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
          architecture: "x64"
        name: Publish YTSubConverter.CLI project via publish.py script
        env:
          BUILD_TYPE: ${{ matrix.build_type }}
          RUNTIME_IDENTIFIER: ${{ matrix.runtime }}
        # Rely on publish script's preset build flags for the specified
        # build types as well as its RID auto-detection for
        # automatically stripping WINDOWS symbols from .cs files
        run: |
          python publish.py --verbose \
          --force-restore \
          --configuration "Release" \
          --output "publish" \
          --runtime "$RUNTIME_IDENTIFIER" \
          --build-type "$BUILD_TYPE"

      - name: Upload artifacts from publish directory
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.runtime }}-non-portable
          path: publish/